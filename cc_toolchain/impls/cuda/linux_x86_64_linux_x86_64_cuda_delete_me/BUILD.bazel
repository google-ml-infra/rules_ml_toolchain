load("@local_config_cuda//cuda:build_defs.bzl", "if_cuda", "if_cuda_hermetic_clang")
load("@rules_cc//cc:defs.bzl", "cc_toolchain")
load("//third_party/rules_cc_toolchain:toolchain_config.bzl", "cc_toolchain_config")
load("//third_party/rules_cc_toolchain/features:cc_toolchain_import.bzl", "cc_toolchain_import")
load("//third_party/rules_cc_toolchain/features:features.bzl", "cc_toolchain_import_feature")

#---------------------------------------------------------------------------------------
# Tools: Linux x86_64, Sysroot: Linux x86_64, CUDA
#---------------------------------------------------------------------------------------

package(
    default_visibility = [
        "//cc_toolchain/impls/cuda:__pkg__",
    ],
)

filegroup(
    name = "cuda_nvcc",
    srcs = if_cuda([
        "@cuda_nvcc//:bin",
        "@cuda_nvcc//:nvvm",
    ]),
)

alias(
    name = "cuda_nvcc_feature",
    actual = "@cuda_nvcc//:feature",
    visibility = ["//visibility:public"],
)

# TODO: remove below alias
alias(
    name = "startup_libs",
    actual = "@sysroot_linux_x86_64//:startup_libs",
    visibility = ["//visibility:public"],
)

cc_toolchain_import_feature(
    name = "startup_libs_feature",
    enabled = True,
    toolchain_import = ":startup_libs",
)

# buildifier: leave-alone
cc_toolchain_import(
    name = "imports",
    deps = [
        "@rules_ml_toolchain//cc_toolchain/cuda/clang:inject_cuda_runtime_wrapper",
        "@sysroot_linux_x86_64//:includes_c",
        "@llvm_linux_x86_64//:includes",
        "@sysroot_linux_x86_64//:includes_system",
        "@sysroot_linux_x86_64//:glibc",
        "@sysroot_linux_x86_64//:pthread",
        "@llvm_linux_x86_64//:libclang_rt",
    ],
    visibility = ["//visibility:public"],
)

cc_toolchain_import_feature(
    name = "imports_feature",
    enabled = True,
    toolchain_import = ":imports",
)
